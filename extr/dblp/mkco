#! /usr/bin/perl -w
#
# Generate the coauthorship network from the DBLP XML.
#
# INPUT
#	dblp.xml
#
# STDOUT
#	out.dblp_coauthor
#

use strict; 

use Encode; 
use HTML::Entities;
use Time::Local;

open(IN, "<dblp.xml") or die;

print "% sym positive\n";

my $key  = "";

my @authors = (); 

my $year = "";

while (<IN>)
{
    if (/<(article|inproceedings|proceedings|book|incollection|phdthesis|masterthesis|www) .*key=\"([^\"]*)\"/)
    {
        # if last paper did not end "properly" (e.g., with no new line)
        if (@authors)
        {
            my $n = scalar @authors; 
            foreach my $i (@authors)
            {
                foreach my $j (@authors)
                {
                    next if $i eq $j;
                    my $i_e = $i;
                    my $j_e = $j;
                    $i_e =~ s/ /_/g;
                    $j_e =~ s/ /_/g;
                    $i_e = encode("utf-8", decode_entities($i_e)); 
                    $j_e = encode("utf-8", decode_entities($j_e)); 
                    my $timestamp = timelocal(1,1,1,1,0,$year);
                    print "$i_e $j_e 1 $timestamp\n"; 
                }
            }
        }
        @authors = (); 

        $key= $2;
    }

    elsif (/<year>([0-9]+)<\/year>/)
    {
        $year = $1;
    }

    elsif (/<author>(.+)<\/author>/)
    {
        my $author = $1;
        push(@authors, $author); 
    }

    elsif (/<\/(article|inproceedings|proceedings|book|incollection|phdthesis|masterthesis|www)>/)
    {
        my $n = scalar @authors; 
        foreach my $i (@authors)
        {
            foreach my $j (@authors)
            {
                next if $i eq $j;
                my $i_e = $i;
                my $j_e = $j;
                $i_e =~ s/ /_/g;
                $j_e =~ s/ /_/g;
                $i_e = encode("utf-8", decode_entities($i_e)); 
                $j_e = encode("utf-8", decode_entities($j_e)); 
                my $timestamp = timelocal(1,1,1,1,0,$year);
                print "$i_e $j_e 1 $timestamp\n"; 
            }
        }
    }
}

close(IN) or die;
